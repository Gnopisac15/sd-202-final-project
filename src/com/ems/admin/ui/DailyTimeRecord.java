/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package com.ems.admin.ui;

import java.sql.Connection;
import java.sql.DriverManager;
import java.sql.PreparedStatement;
import java.sql.ResultSet;
import javax.swing.JOptionPane;
import javax.swing.plaf.basic.BasicInternalFrameUI;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author 2ndyrGroupB
 */
public class DailyTimeRecord extends javax.swing.JInternalFrame {

    /**
     * Creates new form DailyTimeRecord
     */
    public DailyTimeRecord() {
        initComponents();
        this.setBorder(javax.swing.BorderFactory.createEmptyBorder(0,0,0,0));
        BasicInternalFrameUI bi = (BasicInternalFrameUI)this.getUI();
        bi.setNorthPane(null);
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jButton2 = new javax.swing.JButton();
        jScrollPane1 = new javax.swing.JScrollPane();
        jTextArea1 = new javax.swing.JTextArea();
        jPanel1 = new javax.swing.JPanel();
        jScrollPane2 = new javax.swing.JScrollPane();
        viewSelectedTimeRecord = new javax.swing.JTable();
        jScrollPane3 = new javax.swing.JScrollPane();
        viewTimeRecord1 = new javax.swing.JTable();
        jLabel2 = new javax.swing.JLabel();
        searchTextField = new javax.swing.JTextField();
        jLabel1 = new javax.swing.JLabel();

        jButton2.setText("jButton2");

        jTextArea1.setColumns(20);
        jTextArea1.setRows(5);
        jScrollPane1.setViewportView(jTextArea1);

        setPreferredSize(new java.awt.Dimension(1010, 625));

        jPanel1.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        viewSelectedTimeRecord.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.RAISED));
        viewSelectedTimeRecord.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Employee ID", "Date", "Start Time ", "End Time", "Regular Hours", "Overtime Hours", "Total Hours"
            }
        ));
        jScrollPane2.setViewportView(viewSelectedTimeRecord);

        jPanel1.add(jScrollPane2, new org.netbeans.lib.awtextra.AbsoluteConstraints(70, 70, 840, 170));

        viewTimeRecord1.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.RAISED));
        viewTimeRecord1.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Employee ID", "Date", "Start Time ", "End Time", "Regular Hours", "Overtime Hours", "Total Hours"
            }
        ));
        jScrollPane3.setViewportView(viewTimeRecord1);

        jPanel1.add(jScrollPane3, new org.netbeans.lib.awtextra.AbsoluteConstraints(70, 280, 840, 320));

        jLabel2.setFont(new java.awt.Font("Tahoma", 0, 24)); // NOI18N
        jLabel2.setText("View & Search Daily Time Record");
        jPanel1.add(jLabel2, new org.netbeans.lib.awtextra.AbsoluteConstraints(70, 10, -1, -1));

        searchTextField.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        searchTextField.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                searchTextFieldKeyReleased(evt);
            }
            public void keyTyped(java.awt.event.KeyEvent evt) {
                searchTextFieldKeyTyped(evt);
            }
        });
        jPanel1.add(searchTextField, new org.netbeans.lib.awtextra.AbsoluteConstraints(690, 30, 220, 30));

        jLabel1.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        jLabel1.setText("SEARCH");
        jPanel1.add(jLabel1, new org.netbeans.lib.awtextra.AbsoluteConstraints(630, 30, -1, 30));

        getContentPane().add(jPanel1, java.awt.BorderLayout.CENTER);

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void searchTextFieldKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_searchTextFieldKeyTyped
        // TODO add your handling code here:
        DefaultTableModel dm = (DefaultTableModel) viewSelectedTimeRecord.getModel();
        dm.getDataVector().removeAllElements();
        dm.fireTableDataChanged();

        search();
    }//GEN-LAST:event_searchTextFieldKeyTyped

    private void searchTextFieldKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_searchTextFieldKeyReleased
        // TODO add your handling code here:
         if (searchTextField.getText().isEmpty()) {
            DefaultTableModel dm = (DefaultTableModel) viewSelectedTimeRecord.getModel();
            dm.getDataVector().removeAllElements();
            dm.fireTableDataChanged();
        }
    }//GEN-LAST:event_searchTextFieldKeyReleased
    
    private void search(){
         String searchTxt = searchTextField.getText();
        try {
            Class.forName("com.mysql.jdbc.Driver");
            Connection con = DriverManager.getConnection("jdbc:mysql://localhost:3306/sd-202", "root", "");
            PreparedStatement pstm = con.prepareStatement("SELECT * FROM employee_time_record where emp_id LIKE '%" + searchTxt + "%' OR date LIKE '%" + searchTxt + "%' OR time_in"+ " LIKE '%" + searchTxt + "%' OR time_out LIKE '%" + searchTxt + "%' OR overtime_hours LIKE '%" + searchTxt + "%'OR total_hours LIKE '%" + searchTxt + "%'");
            ResultSet rs = pstm.executeQuery();
            DefaultTableModel model = (DefaultTableModel) viewSelectedTimeRecord.getModel();

            while (rs.next()) {
                 model.addRow(new Object[]{rs.getInt(2), rs.getString(3),rs.getString(4),rs.getString(5),rs.getString(6),rs.getString(7), rs.getString(8)});
            }
        } catch (Exception e) {
            System.out.println(e.getMessage());
            JOptionPane.showMessageDialog(null, "Invalid input employee id..");
        }
    }
    
    public void viewTimeDailyTimeRecord(){
          try {
            Class.forName("com.mysql.jdbc.Driver");
            Connection con = DriverManager.getConnection("jdbc:mysql://localhost:3306/sd-202", "root", "");
            PreparedStatement pstm = con.prepareStatement("SELECT * FROM employee_time_record");
            ResultSet rs = pstm.executeQuery();
            DefaultTableModel model = (DefaultTableModel) viewTimeRecord1.getModel();
            while(rs.next()){
                model.addRow(new Object[]{rs.getInt(2), rs.getString(3),rs.getString(4),rs.getString(5),rs.getString(6),rs.getString(7), rs.getString(8)});
            }
        } catch (Exception e) {
            System.out.println(e.getMessage());
        }
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton jButton2;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JScrollPane jScrollPane3;
    private javax.swing.JTextArea jTextArea1;
    private javax.swing.JTextField searchTextField;
    private javax.swing.JTable viewSelectedTimeRecord;
    private javax.swing.JTable viewTimeRecord1;
    // End of variables declaration//GEN-END:variables
}
